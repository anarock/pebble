{
  "remainingRequest": "/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"env\",{\"targets\":{\"node\":\"6\"}}],[\"/Users/ritz078/projects/pebble/node_modules/babel-preset-react-app/index.js\",{\"flow\":false}],\"/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/@babel/preset-typescript/lib/index.js\"],\"plugins\":[\"/Users/ritz078/projects/pebble/node_modules/react-hot-loader/babel.js\",\"/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/@babel/plugin-syntax-dynamic-import/lib/index.js\"],\"env\":{\"test\":{\"plugins\":[\"require-context-hook\"]}},\"cacheDirectory\":true,\"babelrc\":false}!/Users/ritz078/projects/pebble/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/ritz078/projects/pebble/src/components/shared/Control.tsx",
  "dependencies": [
    {
      "path": "/Users/ritz078/projects/pebble/src/components/shared/Control.tsx",
      "mtime": 1534087031596
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/cache-loader/dist/cjs.js",
      "mtime": 0
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1529635966000
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1534034887000
    }
  ],
  "contextDependencies": [],
  "result": [
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ControlView = undefined;\nvar _jsxFileName = \"/Users/ritz078/projects/pebble/src/components/shared/Control.tsx\";\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _Control = require(\"../styles/Control.styles\");\n\nvar _theme = require(\"../../theme\");\n\nvar _emotion = require(\"emotion\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar Control = function Control(props) {\n  var checked = props.checked,\n      onChange = props.onChange,\n      value = props.value,\n      disabled = props.disabled,\n      children = props.children,\n      type = props.type,\n      className = props.className;\n  return React.createElement(\"div\", {\n    className: (0, _emotion.cx)(_Control.controlStyle, className),\n    role: type,\n    \"aria-disabled\": disabled,\n    \"aria-checked\": checked,\n    \"data-disabled\": disabled,\n    tabIndex: checked ? 0 : -1,\n    onClick: !disabled ? function () {\n      return onChange({\n        value: value,\n        checked: !checked\n      });\n    } : undefined,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: undefined\n  }, children(props));\n};\n\nvar ControlView = exports.ControlView = function ControlView(_ref) {\n  var checked = _ref.checked,\n      label = _ref.label,\n      type = _ref.type;\n  var isRadio = type === \"radio\";\n  var iconClass = (0, _emotion.cx)({\n    \"icon-radio\": isRadio && !checked,\n    \"icon-radio-selected\": isRadio && checked,\n    \"icon-checkbox-selected\": !isRadio && checked,\n    \"icon-checkbox-unselected\": !isRadio && !checked\n  });\n  return React.createElement(\"div\", {\n    className: _Control.controlContentStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: undefined\n  }, React.createElement(\"i\", {\n    style: {\n      color: checked ? _theme.colors.violet.base : _theme.colors.gray.light,\n      paddingTop: 2\n    },\n    className: iconClass,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: undefined\n  }), \" \", label);\n};\n\nControl.defaultProps = {\n  children: function children(props) {\n    return React.createElement(ControlView, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: undefined\n    }));\n  }\n};\nvar _default = Control;\nexports.default = _default;\n\ntry {\n  // @ts-ignore\n  ControlView.displayName = \"ControlView\"; // @ts-ignore\n\n  ControlView.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"ControlView\",\n    \"props\": {\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(args: { value: ReactText; checked: boolean; }) => void\"\n        }\n      },\n      \"value\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"value\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ReactText\"\n        }\n      },\n      \"label\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"label\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"checked\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"checked\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"disabled\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"disabled\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"type\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"type\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"\\\"radio\\\" | \\\"checkbox\\\"\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/shared/Control.tsx#ControlView\"] = {\n      docgenInfo: ControlView.__docgenInfo,\n      name: \"ControlView\",\n      path: \"src/components/shared/Control.tsx#ControlView\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\ntry {\n  // @ts-ignore\n  Control.displayName = \"Control\"; // @ts-ignore\n\n  Control.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Control\",\n    \"props\": {\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(args: { value: ReactText; checked: boolean; }) => void\"\n        }\n      },\n      \"value\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"value\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ReactText\"\n        }\n      },\n      \"label\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"label\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"checked\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"checked\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"disabled\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"disabled\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"type\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"type\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"\\\"radio\\\" | \\\"checkbox\\\"\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/shared/Control.tsx#Control\"] = {\n      docgenInfo: Control.__docgenInfo,\n      name: \"Control\",\n      path: \"src/components/shared/Control.tsx#Control\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Control, \"Control\", \"/Users/ritz078/projects/pebble/src/components/shared/Control.tsx\");\n  reactHotLoader.register(ControlView, \"ControlView\", \"/Users/ritz078/projects/pebble/src/components/shared/Control.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/ritz078/projects/pebble/src/components/shared/Control.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": ["src/components/shared/Control.tsx"],
      "names": [
        "React",
        "Control",
        "props",
        "checked",
        "onChange",
        "value",
        "disabled",
        "children",
        "type",
        "className",
        "controlStyle",
        "undefined",
        "ControlView",
        "label",
        "isRadio",
        "iconClass",
        "controlContentStyle",
        "color",
        "colors",
        "violet",
        "base",
        "gray",
        "light",
        "paddingTop",
        "defaultProps",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "name",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ritz078/projects/pebble",
      "sourcesContent": [
        "import * as React from \"react\";\nimport { controlContentStyle, controlStyle } from \"../styles/Control.styles\";\nimport { ControlProps } from \"../typings/Control\";\nimport { colors } from \"../../theme\";\nimport { cx } from \"emotion\";\n\nconst Control: React.SFC<ControlProps> = props => {\n  const {\n    checked,\n    onChange,\n    value,\n    disabled,\n    children,\n    type,\n    className\n  } = props;\n  return (\n    <div\n      className={cx(controlStyle, className)}\n      role={type}\n      aria-disabled={disabled}\n      aria-checked={checked}\n      data-disabled={disabled}\n      tabIndex={checked ? 0 : -1}\n      onClick={\n        !disabled ? () => onChange({ value, checked: !checked }) : undefined\n      }\n    >\n      {children(props)}\n    </div>\n  );\n};\n\nexport const ControlView: React.SFC<ControlProps> = ({\n  checked,\n  label,\n  type\n}) => {\n  const isRadio = type === \"radio\";\n\n  const iconClass = cx({\n    \"icon-radio\": isRadio && !checked,\n    \"icon-radio-selected\": isRadio && checked,\n    \"icon-checkbox-selected\": !isRadio && checked,\n    \"icon-checkbox-unselected\": !isRadio && !checked\n  });\n\n  return (\n    <div className={controlContentStyle}>\n      <i\n        style={{\n          color: checked ? colors.violet.base : colors.gray.light,\n          paddingTop: 2\n        }}\n        className={iconClass}\n      />{\" \"}\n      {label}\n    </div>\n  );\n};\n\nControl.defaultProps = {\n  children: props => <ControlView {...props} />\n};\n\nexport default Control;\ntry {\n    // @ts-ignore\n    ControlView.displayName = \"ControlView\";\n    // @ts-ignore\n    ControlView.__docgenInfo = { \"description\": \"\", \"displayName\": \"ControlView\", \"props\": { \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(args: { value: ReactText; checked: boolean; }) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"ReactText\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"checked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"\\\"radio\\\" | \\\"checkbox\\\"\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/shared/Control.tsx#ControlView\"] = { docgenInfo: ControlView.__docgenInfo, name: \"ControlView\", path: \"src/components/shared/Control.tsx#ControlView\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    Control.displayName = \"Control\";\n    // @ts-ignore\n    Control.__docgenInfo = { \"description\": \"\", \"displayName\": \"Control\", \"props\": { \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(args: { value: ReactText; checked: boolean; }) => void\" } }, \"value\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"ReactText\" } }, \"label\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"label\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"checked\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"checked\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"type\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"type\", \"required\": true, \"type\": { \"name\": \"\\\"radio\\\" | \\\"checkbox\\\"\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/shared/Control.tsx#Control\"] = { docgenInfo: Control.__docgenInfo, name: \"Control\", path: \"src/components/shared/Control.tsx#Control\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
