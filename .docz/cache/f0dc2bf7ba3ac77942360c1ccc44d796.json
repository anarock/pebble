{
  "remainingRequest": "/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"env\",{\"targets\":{\"node\":\"6\"}}],[\"/Users/ritz078/projects/pebble/node_modules/babel-preset-react-app/index.js\",{\"flow\":false}],\"/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/@babel/preset-typescript/lib/index.js\"],\"plugins\":[\"/Users/ritz078/projects/pebble/node_modules/react-hot-loader/babel.js\",\"/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/@babel/plugin-syntax-dynamic-import/lib/index.js\"],\"env\":{\"test\":{\"plugins\":[\"require-context-hook\"]}},\"cacheDirectory\":true,\"babelrc\":false}!/Users/ritz078/projects/pebble/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/ritz078/projects/pebble/src/components/OptionGroupCheckBox.tsx",
  "dependencies": [
    {
      "path": "/Users/ritz078/projects/pebble/src/components/OptionGroupCheckBox.tsx",
      "mtime": 1534351907147
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/cache-loader/dist/cjs.js",
      "mtime": 0
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1529635966000
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1534034887000
    }
  ],
  "contextDependencies": [],
  "result": [
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _jsxFileName = \"/Users/ritz078/projects/pebble/src/components/OptionGroupCheckBox.tsx\";\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _getSelectedCheckboxes = require(\"./utils/getSelectedCheckboxes\");\n\nvar _mixins = require(\"../theme/mixins\");\n\nvar mixins = _interopRequireWildcard(_mixins);\n\nvar _Button = require(\"./Button\");\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _OptionGroup = require(\"./shared/OptionGroup\");\n\nvar _OptionGroup2 = _interopRequireDefault(_OptionGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar OptionGroupCheckBox = function OptionGroupCheckBox(props) {\n  var onApply = props.onApply,\n      onClear = props.onClear,\n      selected = props.selected,\n      onChange = props.onChange,\n      rest = _objectWithoutProperties(props, [\"onApply\", \"onClear\", \"selected\", \"onChange\"]);\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: undefined\n  }, React.createElement(_OptionGroup2.default, Object.assign({}, rest, {\n    isSelected: function isSelected(value) {\n      return selected && selected.indexOf(value) >= 0;\n    },\n    handleChange: function handleChange(_ref) {\n      var value = _ref.value;\n      onChange((0, _getSelectedCheckboxes.getSelectedCheckboxes)(value, selected), props);\n    },\n    multiSelect: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: undefined\n  })), React.createElement(\"div\", {\n    style: _objectSpread({}, mixins.flexSpaceBetween, {\n      padding: 20\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: undefined\n  }, React.createElement(_Button2.default, {\n    type: \"secondary\",\n    onClick: onClear,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: undefined\n  }, \"Clear\"), React.createElement(_Button2.default, {\n    onClick: function onClick() {\n      return onApply(selected, props);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: undefined\n  }, \"Apply\")));\n};\n\nvar _default = OptionGroupCheckBox;\nexports.default = _default;\n\ntry {\n  // @ts-ignore\n  OptionGroupCheckBox.displayName = \"OptionGroupCheckBox\"; // @ts-ignore\n\n  OptionGroupCheckBox.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"OptionGroupCheckBox\",\n    \"props\": {\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(value: ReactText[], props: OptionGroupCheckBoxProps) => void\"\n        }\n      },\n      \"selected\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"selected\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"ReactText[]\"\n        }\n      },\n      \"onApply\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onApply\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(value: ReactText[], props: OptionGroupCheckBoxProps) => void\"\n        }\n      },\n      \"onClear\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onClear\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"() => void\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"searchBox\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"searchBox\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"onSearchBoxQueryChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onSearchBoxQueryChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(query: string) => void\"\n        }\n      },\n      \"searchBoxPlaceholder\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"searchBoxPlaceholder\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/OptionGroupCheckBox.tsx#OptionGroupCheckBox\"] = {\n      docgenInfo: OptionGroupCheckBox.__docgenInfo,\n      name: \"OptionGroupCheckBox\",\n      path: \"src/components/OptionGroupCheckBox.tsx#OptionGroupCheckBox\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(OptionGroupCheckBox, \"OptionGroupCheckBox\", \"/Users/ritz078/projects/pebble/src/components/OptionGroupCheckBox.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/ritz078/projects/pebble/src/components/OptionGroupCheckBox.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": ["src/components/OptionGroupCheckBox.tsx"],
      "names": [
        "React",
        "mixins",
        "OptionGroupCheckBox",
        "props",
        "onApply",
        "onClear",
        "selected",
        "onChange",
        "rest",
        "value",
        "indexOf",
        "flexSpaceBetween",
        "padding",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "name",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": ";;;;;;;AAAA;;IAAYA,K;;AACZ;;AACA;;IAAYC,M;;AACZ;;;;AACA;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMC,mBAAwD,GAAG,SAA3DA,mBAA2D,CAAAC,KAAK,EAAI;AAAA,MAClEC,OADkE,GAChBD,KADgB,CAClEC,OADkE;AAAA,MACzDC,OADyD,GAChBF,KADgB,CACzDE,OADyD;AAAA,MAChDC,QADgD,GAChBH,KADgB,CAChDG,QADgD;AAAA,MACtCC,QADsC,GAChBJ,KADgB,CACtCI,QADsC;AAAA,MACzBC,IADyB,4BAChBL,KADgB;;AAExE,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,qBAAD,oBACMK,IADN;AAEE,IAAA,UAAU,EAAE,oBAAAC,KAAK;AAAA,aAAIH,QAAQ,IAAIA,QAAQ,CAACI,OAAT,CAAiBD,KAAjB,KAA2B,CAA3C;AAAA,KAFnB;AAGE,IAAA,YAAY,EAAE,4BAAe;AAAA,UAAZA,KAAY,QAAZA,KAAY;AAC3BF,MAAAA,QAAQ,CAAC,kDAAsBE,KAAtB,EAA6BH,QAA7B,CAAD,EAAyCH,KAAzC,CAAR;AACD,KALH;AAME,IAAA,WAAW,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAUE;AAAK,IAAA,KAAK,oBAAOF,MAAM,CAACU,gBAAd;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAEP,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,oBAAC,gBAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMD,OAAO,CAACE,QAAD,EAAWH,KAAX,CAAb;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAVF,CADF;AAmBD,CArBD;;eAuBeD,mB;;;AACf,IAAI;AACA;AACAA,EAAAA,mBAAmB,CAACW,WAApB,GAAkC,qBAAlC,CAFA,CAGA;;AACAX,EAAAA,mBAAmB,CAACY,YAApB,GAAmC;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,qBAApC;AAA2D,aAAS;AAAE,kBAAY;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,UAAnD;AAA+D,oBAAY,IAA3E;AAAiF,gBAAQ;AAAE,kBAAQ;AAAV;AAAzF,OAAd;AAAsL,kBAAY;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,UAAnD;AAA+D,oBAAY,KAA3E;AAAkF,gBAAQ;AAAE,kBAAQ;AAAV;AAA1F,OAAlM;AAAyT,iBAAW;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,SAAnD;AAA8D,oBAAY,IAA1E;AAAgF,gBAAQ;AAAE,kBAAQ;AAAV;AAAxF,OAApU;AAA2e,iBAAW;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,SAAnD;AAA8D,oBAAY,IAA1E;AAAgF,gBAAQ;AAAE,kBAAQ;AAAV;AAAxF,OAAtf;AAA0mB,mBAAa;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,WAAnD;AAAgE,oBAAY,KAA5E;AAAmF,gBAAQ;AAAE,kBAAQ;AAAV;AAA3F,OAAvnB;AAA0uB,mBAAa;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,WAAnD;AAAgE,oBAAY,KAA5E;AAAmF,gBAAQ;AAAE,kBAAQ;AAAV;AAA3F,OAAvvB;AAA22B,gCAA0B;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,wBAAnD;AAA6E,oBAAY,KAAzF;AAAgG,gBAAQ;AAAE,kBAAQ;AAAV;AAAxG,OAAr4B;AAAshC,8BAAwB;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,sBAAnD;AAA2E,oBAAY,KAAvF;AAA8F,gBAAQ;AAAE,kBAAQ;AAAV;AAAtG;AAA9iC;AAApE,GAAnC,CAJA,CAKA;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,4DAAD,CAAvB,GAAwF;AAAEC,MAAAA,UAAU,EAAEd,mBAAmB,CAACY,YAAlC;AAAgDG,MAAAA,IAAI,EAAE,qBAAtD;AAA6EC,MAAAA,IAAI,EAAE;AAAnF,KAAxF;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BAlC5CjB,mB",
      "sourceRoot": "/Users/ritz078/projects/pebble",
      "sourcesContent": [
        "import * as React from \"react\";\nimport { getSelectedCheckboxes } from \"./utils/getSelectedCheckboxes\";\nimport * as mixins from \"../theme/mixins\";\nimport Button from \"./Button\";\nimport OptionGroup from \"./shared/OptionGroup\";\nimport { OptionGroupCheckBoxProps } from \"./typings/OptionGroupCheckBox\";\n\nconst OptionGroupCheckBox: React.SFC<OptionGroupCheckBoxProps> = props => {\n  let { onApply, onClear, selected, onChange, ...rest } = props;\n  return (\n    <React.Fragment>\n      <OptionGroup\n        {...rest}\n        isSelected={value => selected && selected.indexOf(value) >= 0}\n        handleChange={({ value }) => {\n          onChange(getSelectedCheckboxes(value, selected), props);\n        }}\n        multiSelect\n      />\n\n      <div style={{ ...mixins.flexSpaceBetween, padding: 20 }}>\n        <Button type=\"secondary\" onClick={onClear}>\n          Clear\n        </Button>\n        <Button onClick={() => onApply(selected, props)}>Apply</Button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default OptionGroupCheckBox;\ntry {\n    // @ts-ignore\n    OptionGroupCheckBox.displayName = \"OptionGroupCheckBox\";\n    // @ts-ignore\n    OptionGroupCheckBox.__docgenInfo = { \"description\": \"\", \"displayName\": \"OptionGroupCheckBox\", \"props\": { \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": true, \"type\": { \"name\": \"(value: ReactText[], props: OptionGroupCheckBoxProps) => void\" } }, \"selected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selected\", \"required\": false, \"type\": { \"name\": \"ReactText[]\" } }, \"onApply\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onApply\", \"required\": true, \"type\": { \"name\": \"(value: ReactText[], props: OptionGroupCheckBoxProps) => void\" } }, \"onClear\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClear\", \"required\": true, \"type\": { \"name\": \"() => void\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"searchBox\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"searchBox\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onSearchBoxQueryChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSearchBoxQueryChange\", \"required\": false, \"type\": { \"name\": \"(query: string) => void\" } }, \"searchBoxPlaceholder\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"searchBoxPlaceholder\", \"required\": false, \"type\": { \"name\": \"string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/OptionGroupCheckBox.tsx#OptionGroupCheckBox\"] = { docgenInfo: OptionGroupCheckBox.__docgenInfo, name: \"OptionGroupCheckBox\", path: \"src/components/OptionGroupCheckBox.tsx#OptionGroupCheckBox\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
