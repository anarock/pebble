{
  "remainingRequest": "/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"env\",{\"targets\":{\"node\":\"6\"}}],[\"/Users/ritz078/projects/pebble/node_modules/babel-preset-react-app/index.js\",{\"flow\":false}],\"/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/@babel/preset-typescript/lib/index.js\"],\"plugins\":[\"/Users/ritz078/projects/pebble/node_modules/react-hot-loader/babel.js\",\"/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/@babel/plugin-syntax-dynamic-import/lib/index.js\"],\"env\":{\"test\":{\"plugins\":[\"require-context-hook\"]}},\"cacheDirectory\":true,\"babelrc\":false}!/Users/ritz078/projects/pebble/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/ritz078/projects/pebble/src/components/RadioGroup.tsx",
  "dependencies": [
    {
      "path": "/Users/ritz078/projects/pebble/src/components/RadioGroup.tsx",
      "mtime": 1534003798574
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/cache-loader/dist/cjs.js",
      "mtime": 0
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/docz-core/node_modules/babel-loader/lib/index.js",
      "mtime": 1529635966000
    },
    {
      "path": "/Users/ritz078/projects/pebble/node_modules/react-docgen-typescript-loader/dist/index.js",
      "mtime": 1534034887000
    }
  ],
  "contextDependencies": [],
  "result": [
    "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\nvar _jsxFileName = \"/Users/ritz078/projects/pebble/src/components/RadioGroup.tsx\";\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar RadioGroup =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(RadioGroup, _React$PureComponent);\n\n  function RadioGroup() {\n    var _ref;\n\n    var _temp, _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), \"handleChange\", {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function value(_ref2) {\n        var _value = _ref2.value,\n            checked = _ref2.checked;\n        var _this$props = _this.props,\n            toggle = _this$props.toggle,\n            selected = _this$props.selected,\n            onChange = _this$props.onChange;\n        if (!toggle && _value === selected) return;\n        onChange(checked ? _value : undefined, _this.props);\n      }\n    }), _temp));\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          selected = _this$props2.selected,\n          className = _this$props2.className,\n          name = _this$props2.name,\n          disabled = _this$props2.disabled;\n\n      var _children = React.Children.map(children, function (radio) {\n        return React.cloneElement(radio, {\n          onChange: _this2.handleChange,\n          checked: selected === radio.props.value,\n          disabled: disabled\n        });\n      });\n\n      return React.createElement(\"div\", {\n        role: \"radiogroup\",\n        \"aria-label\": name,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, _children);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return RadioGroup;\n}(React.PureComponent);\n\nexports.default = RadioGroup;\n\ntry {\n  // @ts-ignore\n  RadioGroup.displayName = \"RadioGroup\"; // @ts-ignore\n\n  RadioGroup.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"RadioGroup\",\n    \"props\": {\n      \"selected\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"selected\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"ReactText\"\n        }\n      },\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"(value: ReactText, props: RadioGroupProps) => void\"\n        }\n      },\n      \"toggle\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"toggle\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"className\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"className\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"name\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"name\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"disabled\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"disabled\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/RadioGroup.tsx#RadioGroup\"] = {\n      docgenInfo: RadioGroup.__docgenInfo,\n      name: \"RadioGroup\",\n      path: \"src/components/RadioGroup.tsx#RadioGroup\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(RadioGroup, \"RadioGroup\", \"/Users/ritz078/projects/pebble/src/components/RadioGroup.tsx\");\n  leaveModule(module);\n})();\n\n;",
    {
      "version": 3,
      "sources": ["src/components/RadioGroup.tsx"],
      "names": [
        "React",
        "RadioGroup",
        "value",
        "checked",
        "props",
        "toggle",
        "selected",
        "onChange",
        "undefined",
        "children",
        "className",
        "name",
        "disabled",
        "_children",
        "Children",
        "map",
        "radio",
        "cloneElement",
        "handleChange",
        "PureComponent",
        "displayName",
        "__docgenInfo",
        "STORYBOOK_REACT_CLASSES",
        "docgenInfo",
        "path",
        "__react_docgen_typescript_loader_error"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ritz078/projects/pebble",
      "sourcesContent": [
        "import * as React from \"react\";\nimport { RadioProps } from \"./typings/Radio\";\nimport { RadioGroupProps } from \"./typings/RadioGroup\";\n\nexport default class RadioGroup extends React.PureComponent<RadioGroupProps> {\n  private handleChange = ({ value, checked }) => {\n    const { toggle, selected, onChange } = this.props;\n    if (!toggle && value === selected) return;\n    onChange(checked ? value : undefined, this.props);\n  };\n\n  render() {\n    const { children, selected, className, name, disabled } = this.props;\n\n    const _children = React.Children.map(\n      children,\n      (radio: React.ReactElement<RadioProps>) =>\n        React.cloneElement(radio, {\n          onChange: this.handleChange,\n          checked: selected === radio.props.value,\n          disabled\n        })\n    );\n\n    return (\n      <div role=\"radiogroup\" aria-label={name} className={className}>\n        {_children}\n      </div>\n    );\n  }\n}\ntry {\n    // @ts-ignore\n    RadioGroup.displayName = \"RadioGroup\";\n    // @ts-ignore\n    RadioGroup.__docgenInfo = { \"description\": \"\", \"displayName\": \"RadioGroup\", \"props\": { \"selected\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"selected\", \"required\": true, \"type\": { \"name\": \"ReactText\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": true, \"type\": { \"name\": \"(value: ReactText, props: RadioGroupProps) => void\" } }, \"toggle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"toggle\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"className\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"name\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"name\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"disabled\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"disabled\", \"required\": false, \"type\": { \"name\": \"boolean\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/RadioGroup.tsx#RadioGroup\"] = { docgenInfo: RadioGroup.__docgenInfo, name: \"RadioGroup\", path: \"src/components/RadioGroup.tsx#RadioGroup\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"
      ]
    }
  ]
}
