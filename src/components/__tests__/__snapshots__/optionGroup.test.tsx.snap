// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptionGroup Component snapshot in selected state 1`] = `
.emotion-6 {
  background-color: #ffffff;
  border-radius: 3px;
  position: relative;
  width: inherit;
  z-index: 9;
  max-height: 352px;
  min-width: 200px;
  overflow-y: auto;
  padding: 20px 1px;
}

.emotion-1 {
  outline: none;
  position: relative;
}

.emotion-2 {
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  line-height: 10px;
  cursor: pointer;
  padding: 0 18px;
  position: relative;
  z-index: 999;
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: initial;
  -ms-flex-line-pack: initial;
  align-content: initial;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 52px;
}

.emotion-2:last-of-type {
  border: 0;
}

.emotion-2:hover {
  background-color: #F7F7F9;
}

.emotion-0 {
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  line-height: 10px;
  cursor: pointer;
  padding: 0 18px;
  position: relative;
  z-index: 999;
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: initial;
  -ms-flex-line-pack: initial;
  align-content: initial;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 52px;
  background-color: #F7F7F9;
  color: #101721;
  font-weight: 500;
  font-size: 14px;
}

.emotion-0:last-of-type {
  border: 0;
}

.emotion-0:hover {
  background-color: #F7F7F9;
}

<div
  className="emotion-6"
  style={
    Object {
      "paddingTop": undefined,
    }
  }
>
  <div
    aria-checked={true}
    className="emotion-1"
    onClick={[Function]}
    role="radio"
    tabIndex={0}
  >
    <div
      className="emotion-0"
      style={
        Object {
          "alignContent": "initial",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      I am an option
       
      <canvas
        height={0}
        onDragOver={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "borderRadius": "inherit",
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
        width={0}
      />
    </div>
  </div>
  <div
    aria-checked={false}
    className="emotion-1"
    onClick={[Function]}
    role="radio"
    tabIndex={-1}
  >
    <div
      className="emotion-2"
      style={
        Object {
          "alignContent": "initial",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      I am an option
       
      <canvas
        height={0}
        onDragOver={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "borderRadius": "inherit",
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
        width={0}
      />
    </div>
  </div>
  <div
    aria-checked={false}
    className="emotion-1"
    onClick={[Function]}
    role="radio"
    tabIndex={-1}
  >
    <div
      className="emotion-2"
      style={
        Object {
          "alignContent": "initial",
          "display": "flex",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      I am an option
       
      <canvas
        height={0}
        onDragOver={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        style={
          Object {
            "borderRadius": "inherit",
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
        width={0}
      />
    </div>
  </div>
</div>
`;
