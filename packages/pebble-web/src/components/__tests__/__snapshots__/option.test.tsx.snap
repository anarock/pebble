// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Option component snapshot for multi select 1`] = `
.emotion-0 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  overflow: hidden;
  text-overflow: ellipsis;
}

.emotion-2 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: none;
  padding: 10px 0;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  cursor: pointer;
  padding: 12px 18px;
  position: relative;
  line-height: 28px;
  z-index: 999;
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: initial;
  -ms-flex-line-pack: initial;
  align-content: initial;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.emotion-2[data-disabled='true'] {
  cursor: not-allowed;
}

.emotion-2:last-of-type {
  border: 0;
}

.emotion-2:hover {
  background-color: #F7F7F9;
}

.emotion-1 {
  margin-left: 10px;
  color: #E0E0E0;
  font-size: 20px;
}

<div
  className="emotion-2"
  onClick={[Function]}
  role="checkbox"
  tabIndex={-1}
>
  <div
    className="emotion-0"
  >
    I am an option
  </div>
  <i
    className="pi pi-checkbox-unselected emotion-1"
  />
  <canvas
    height={0}
    onDragOver={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    style={
      Object {
        "borderRadius": "inherit",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    width={0}
  />
</div>
`;

exports[`Option component snapshot in active state 1`] = `
.emotion-0 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  overflow: hidden;
  text-overflow: ellipsis;
}

.emotion-1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: none;
  padding: 10px 0;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  cursor: pointer;
  padding: 12px 18px;
  position: relative;
  line-height: 28px;
  z-index: 999;
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: initial;
  -ms-flex-line-pack: initial;
  align-content: initial;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #F7F7F9;
}

.emotion-1[data-disabled='true'] {
  cursor: not-allowed;
}

.emotion-1:last-of-type {
  border: 0;
}

.emotion-1:hover {
  background-color: #F7F7F9;
}

<div
  className="emotion-1"
  onClick={[Function]}
  role="radio"
  tabIndex={-1}
>
  <div
    className="emotion-0"
  >
    I am an option
  </div>
  <canvas
    height={0}
    onDragOver={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    style={
      Object {
        "borderRadius": "inherit",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    width={0}
  />
</div>
`;

exports[`Option component snapshot in selected state 1`] = `
.emotion-1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  outline: none;
  padding: 10px 0;
  position: relative;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  font-weight: 400;
  color: #101721;
  font-size: 14px;
  cursor: pointer;
  padding: 12px 18px;
  position: relative;
  line-height: 28px;
  z-index: 999;
  overflow-x: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-content: initial;
  -ms-flex-line-pack: initial;
  align-content: initial;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #101721;
  font-weight: 500;
  font-size: 14px;
}

.emotion-1[data-disabled='true'] {
  cursor: not-allowed;
}

.emotion-1:last-of-type {
  border: 0;
}

.emotion-1:hover {
  background-color: #F7F7F9;
}

.emotion-0 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  overflow: hidden;
  text-overflow: ellipsis;
}

<div
  aria-checked={true}
  className="emotion-1"
  onClick={[Function]}
  role="radio"
  tabIndex={0}
>
  <div
    className="emotion-0"
  >
    I am an option
  </div>
  <canvas
    height={0}
    onDragOver={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    style={
      Object {
        "borderRadius": "inherit",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    width={0}
  />
</div>
`;
