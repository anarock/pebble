// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Option component snapshot for multi select 1`] = `
<div
  css={
    Array [
      Object {
        "map": undefined,
        "name": "qeht8w",
        "next": undefined,
        "styles": "cursor:pointer;display:flex;outline:none;padding:10px 0;position:relative;align-items:center;font-weight:400;color:#101721;font-size:14px;&[data-disabled='true']{cursor:not-allowed;.You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop).{color:#E0E0E0;}}",
        "toString": [Function],
      },
      Array [
        Object {
          "map": undefined,
          "name": "285sb6",
          "next": undefined,
          "styles": "font-weight:400;color:#101721;font-size:14px;cursor:pointer;padding:12px 18px;position:relative;line-height:28px;z-index:999;overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap;display:flex;flex-direction:row;justify-content:space-between;align-content:initial;align-items:center;&:last-of-type{border:0;}&:hover{background-color:#F7F7F9;}",
          "toString": [Function],
        },
        false,
        false,
        undefined,
      ],
    ]
  }
  onClick={[Function]}
  role="checkbox"
  tabIndex={-1}
>
  <div
    css={
      Array [
        Object {
          "map": undefined,
          "name": "8hyqlg",
          "next": undefined,
          "styles": "user-select:none;overflow:hidden;text-overflow:ellipsis;",
          "toString": [Function],
        },
        undefined,
      ]
    }
  >
    I am an option
  </div>
  <i
    className="pi pi-checkbox-unselected"
    css={
      Object {
        "color": "#E0E0E0",
        "fontSize": "20px",
        "marginLeft": "10px",
      }
    }
  />
  <canvas
    height={0}
    onDragOver={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    style={
      Object {
        "borderRadius": "inherit",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    width={0}
  />
</div>
`;

exports[`Option component snapshot in active state 1`] = `
<div
  css={
    Array [
      Object {
        "map": undefined,
        "name": "qeht8w",
        "next": undefined,
        "styles": "cursor:pointer;display:flex;outline:none;padding:10px 0;position:relative;align-items:center;font-weight:400;color:#101721;font-size:14px;&[data-disabled='true']{cursor:not-allowed;.You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop).{color:#E0E0E0;}}",
        "toString": [Function],
      },
      Array [
        Object {
          "map": undefined,
          "name": "285sb6",
          "next": undefined,
          "styles": "font-weight:400;color:#101721;font-size:14px;cursor:pointer;padding:12px 18px;position:relative;line-height:28px;z-index:999;overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap;display:flex;flex-direction:row;justify-content:space-between;align-content:initial;align-items:center;&:last-of-type{border:0;}&:hover{background-color:#F7F7F9;}",
          "toString": [Function],
        },
        Object {
          "map": undefined,
          "name": "396p3i",
          "next": undefined,
          "styles": "background-color:#F7F7F9;",
          "toString": [Function],
        },
        false,
        undefined,
      ],
    ]
  }
  onClick={[Function]}
  role="radio"
  tabIndex={-1}
>
  <div
    css={
      Array [
        Object {
          "map": undefined,
          "name": "8hyqlg",
          "next": undefined,
          "styles": "user-select:none;overflow:hidden;text-overflow:ellipsis;",
          "toString": [Function],
        },
        undefined,
      ]
    }
  >
    I am an option
  </div>
  <canvas
    height={0}
    onDragOver={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    style={
      Object {
        "borderRadius": "inherit",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    width={0}
  />
</div>
`;

exports[`Option component snapshot in selected state 1`] = `
<div
  aria-checked={true}
  css={
    Array [
      Object {
        "map": undefined,
        "name": "qeht8w",
        "next": undefined,
        "styles": "cursor:pointer;display:flex;outline:none;padding:10px 0;position:relative;align-items:center;font-weight:400;color:#101721;font-size:14px;&[data-disabled='true']{cursor:not-allowed;.You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop).{color:#E0E0E0;}}",
        "toString": [Function],
      },
      Array [
        Object {
          "map": undefined,
          "name": "285sb6",
          "next": undefined,
          "styles": "font-weight:400;color:#101721;font-size:14px;cursor:pointer;padding:12px 18px;position:relative;line-height:28px;z-index:999;overflow-x:hidden;text-overflow:ellipsis;white-space:nowrap;display:flex;flex-direction:row;justify-content:space-between;align-content:initial;align-items:center;&:last-of-type{border:0;}&:hover{background-color:#F7F7F9;}",
          "toString": [Function],
        },
        false,
        Object {
          "map": undefined,
          "name": "18i51u",
          "next": undefined,
          "styles": "color:#101721;font-weight:500;font-size:14px;",
          "toString": [Function],
        },
        undefined,
      ],
    ]
  }
  onClick={[Function]}
  role="radio"
  tabIndex={0}
>
  <div
    css={
      Array [
        Object {
          "map": undefined,
          "name": "8hyqlg",
          "next": undefined,
          "styles": "user-select:none;overflow:hidden;text-overflow:ellipsis;",
          "toString": [Function],
        },
        undefined,
      ]
    }
  >
    I am an option
  </div>
  <canvas
    height={0}
    onDragOver={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    style={
      Object {
        "borderRadius": "inherit",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    width={0}
  />
</div>
`;
